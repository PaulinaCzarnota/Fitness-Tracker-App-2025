name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  GRADLE_OPTS: "-Dorg.gradle.jvmargs=-Xmx4g -Dorg.gradle.daemon=false -Dkotlin.compiler.execution.strategy=in-process"

jobs:
  lint:
    name: Code Quality & Linting
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
      with:
        cache-read-only: false
        
    - name: Make gradlew executable
      run: chmod +x gradlew
      
    - name: Run linting and static analysis
      run: |
        ./gradlew \
          -Pci \
          --no-daemon \
          --stacktrace \
          ktlintCheck \
          detekt \
          spotlessCheck
          
    - name: Upload lint reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: lint-reports
        path: |
          **/build/reports/ktlint/**
          **/build/reports/detekt/**
          **/build/reports/spotless/**

  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
      with:
        cache-read-only: false
        
    - name: Make gradlew executable
      run: chmod +x gradlew
      
    - name: Run unit tests with coverage
      run: |
        ./gradlew \
          -Pci \
          --no-daemon \
          --stacktrace \
          --configuration-cache \
          clean \
          testDebugUnitTest \
          jacocoTestReport \
          jacocoCoverageVerification
          
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          **/build/test-results/**
          **/build/reports/tests/**
          
    - name: Upload coverage reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: coverage-reports
        path: |
          **/build/reports/jacoco/**
          **/build/reports/coverage/**
          
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      if: always()
      with:
        file: ./app/build/reports/jacoco/jacocoTestReport/jacocoTestReport.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true

  instrumented-tests:
    name: Instrumented Tests
    runs-on: macos-latest
    strategy:
      matrix:
        api-level: [29, 33]
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
      with:
        cache-read-only: false
        
    - name: Make gradlew executable
      run: chmod +x gradlew
      
    - name: Enable KVM group perms
      run: |
        echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
        sudo udevadm control --reload-rules
        sudo udevadm trigger --name-match=kvm
        
    - name: AVD cache
      uses: actions/cache@v3
      id: avd-cache
      with:
        path: |
          ~/.android/avd/*
          ~/.android/adb*
        key: avd-${{ matrix.api-level }}
        
    - name: Create AVD and generate snapshot for caching
      if: steps.avd-cache.outputs.cache-hit != 'true'
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: ${{ matrix.api-level }}
        arch: x86_64
        target: google_apis
        force-avd-creation: false
        emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
        disable-animations: false
        script: echo "Generated AVD snapshot for caching."
        
    - name: Run instrumented tests
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: ${{ matrix.api-level }}
        arch: x86_64
        target: google_apis
        force-avd-creation: false
        emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
        disable-animations: true
        script: |
          ./gradlew \
            -Pci \
            --no-daemon \
            --stacktrace \
            connectedDebugAndroidTest \
            -Pandroid.testInstrumentationRunnerArguments.class=com.example.fitnesstrackerapp.ui.ComprehensiveUITests
            
    - name: Upload instrumented test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: instrumented-test-results-api-${{ matrix.api-level }}
        path: |
          **/build/reports/androidTests/**
          **/build/outputs/androidTest-results/**

  build:
    name: Build APK
    runs-on: ubuntu-latest
    needs: [lint, test]
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
      with:
        cache-read-only: false
        
    - name: Make gradlew executable
      run: chmod +x gradlew
      
    - name: Build debug APK
      run: |
        ./gradlew \
          -Pci \
          --no-daemon \
          --stacktrace \
          assembleDebug
          
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: debug-apk
        path: app/build/outputs/apk/debug/*.apk
        
    - name: Build release APK (unsigned)
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: |
        ./gradlew \
          -Pci \
          --no-daemon \
          --stacktrace \
          assembleRelease
          
    - name: Upload release APK
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: actions/upload-artifact@v4
      with:
        name: release-apk
        path: app/build/outputs/apk/release/*.apk

  security:
    name: Security Analysis
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
        
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  coverage-report:
    name: Coverage Summary
    runs-on: ubuntu-latest
    needs: [test]
    if: always()
    
    steps:
    - name: Download coverage reports
      uses: actions/download-artifact@v4
      with:
        name: coverage-reports
        path: coverage-reports
        
    - name: Coverage Summary Comment
      uses: 5monkeys/cobertura-action@master
      if: github.event_name == 'pull_request'
      with:
        path: coverage-reports/**/jacocoTestReport.xml
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        minimum_coverage: 80
        fail_below_threshold: true
        show_missing: true
        show_branch: true
        only_changed_files: true
