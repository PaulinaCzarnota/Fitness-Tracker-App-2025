{
  "formatVersion": 1,
  "database": {
    "version": 5,
    "identityHash": "128b2f61ccffd240159dfa9daf568319",
    "entities": [
      {
        "tableName": "users",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `email` TEXT NOT NULL, `username` TEXT NOT NULL, `password_hash` TEXT NOT NULL, `password_salt` TEXT NOT NULL, `first_name` TEXT, `last_name` TEXT, `date_of_birth` INTEGER, `height_cm` REAL, `weight_kg` REAL, `gender` TEXT, `activity_level` TEXT NOT NULL, `fitness_level` TEXT, `registration_date` INTEGER NOT NULL, `last_login` INTEGER, `is_active` INTEGER NOT NULL, `is_account_locked` INTEGER NOT NULL, `failed_login_attempts` INTEGER NOT NULL, `last_password_change` INTEGER NOT NULL, `profile_image_path` TEXT, `notification_enabled` INTEGER NOT NULL, `privacy_settings` TEXT, `created_at` INTEGER NOT NULL, `updated_at` INTEGER NOT NULL, `daily_step_goal` INTEGER NOT NULL, `daily_calorie_goal` INTEGER NOT NULL, `use_metric_units` INTEGER NOT NULL, `firebase_uid` TEXT, `is_email_verified` INTEGER NOT NULL, `provider` TEXT, `photo_url` TEXT)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "email",
            "columnName": "email",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "username",
            "columnName": "username",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "passwordHash",
            "columnName": "password_hash",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "passwordSalt",
            "columnName": "password_salt",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "firstName",
            "columnName": "first_name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "lastName",
            "columnName": "last_name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "dateOfBirth",
            "columnName": "date_of_birth",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "heightCm",
            "columnName": "height_cm",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "weightKg",
            "columnName": "weight_kg",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "gender",
            "columnName": "gender",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "activityLevel",
            "columnName": "activity_level",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "fitnessLevel",
            "columnName": "fitness_level",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "registrationDate",
            "columnName": "registration_date",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lastLogin",
            "columnName": "last_login",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "isActive",
            "columnName": "is_active",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isAccountLocked",
            "columnName": "is_account_locked",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "failedLoginAttempts",
            "columnName": "failed_login_attempts",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lastPasswordChange",
            "columnName": "last_password_change",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "profileImagePath",
            "columnName": "profile_image_path",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "notificationEnabled",
            "columnName": "notification_enabled",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "privacySettings",
            "columnName": "privacy_settings",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "createdAt",
            "columnName": "created_at",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updated_at",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "dailyStepGoal",
            "columnName": "daily_step_goal",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "dailyCalorieGoal",
            "columnName": "daily_calorie_goal",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "useMetricUnits",
            "columnName": "use_metric_units",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "firebaseUid",
            "columnName": "firebase_uid",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isEmailVerified",
            "columnName": "is_email_verified",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "provider",
            "columnName": "provider",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "photoUrl",
            "columnName": "photo_url",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_users_email",
            "unique": true,
            "columnNames": [
              "email"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_users_email` ON `${TABLE_NAME}` (`email`)"
          },
          {
            "name": "index_users_is_active",
            "unique": false,
            "columnNames": [
              "is_active"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_users_is_active` ON `${TABLE_NAME}` (`is_active`)"
          },
          {
            "name": "index_users_is_account_locked",
            "unique": false,
            "columnNames": [
              "is_account_locked"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_users_is_account_locked` ON `${TABLE_NAME}` (`is_account_locked`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "workouts",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `userId` INTEGER NOT NULL, `workoutType` TEXT NOT NULL, `title` TEXT NOT NULL, `startTime` INTEGER NOT NULL, `endTime` INTEGER, `duration` INTEGER NOT NULL, `distance` REAL NOT NULL, `caloriesBurned` INTEGER NOT NULL, `steps` INTEGER NOT NULL, `avgHeartRate` INTEGER, `maxHeartRate` INTEGER, `notes` TEXT, `rating` INTEGER, `weatherCondition` TEXT, `temperature` REAL, `createdAt` INTEGER NOT NULL, `updatedAt` INTEGER NOT NULL, FOREIGN KEY(`userId`) REFERENCES `users`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "userId",
            "columnName": "userId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "workoutType",
            "columnName": "workoutType",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "startTime",
            "columnName": "startTime",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "endTime",
            "columnName": "endTime",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "duration",
            "columnName": "duration",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "distance",
            "columnName": "distance",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "caloriesBurned",
            "columnName": "caloriesBurned",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "steps",
            "columnName": "steps",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "avgHeartRate",
            "columnName": "avgHeartRate",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "maxHeartRate",
            "columnName": "maxHeartRate",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "notes",
            "columnName": "notes",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "rating",
            "columnName": "rating",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "weatherCondition",
            "columnName": "weatherCondition",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "temperature",
            "columnName": "temperature",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_workouts_userId",
            "unique": false,
            "columnNames": [
              "userId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_workouts_userId` ON `${TABLE_NAME}` (`userId`)"
          },
          {
            "name": "index_workouts_workoutType",
            "unique": false,
            "columnNames": [
              "workoutType"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_workouts_workoutType` ON `${TABLE_NAME}` (`workoutType`)"
          },
          {
            "name": "index_workouts_startTime",
            "unique": false,
            "columnNames": [
              "startTime"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_workouts_startTime` ON `${TABLE_NAME}` (`startTime`)"
          },
          {
            "name": "index_workouts_userId_startTime",
            "unique": false,
            "columnNames": [
              "userId",
              "startTime"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_workouts_userId_startTime` ON `${TABLE_NAME}` (`userId`, `startTime`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "users",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "userId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "goals",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `user_id` INTEGER NOT NULL, `title` TEXT NOT NULL, `description` TEXT, `goal_type` TEXT NOT NULL, `target_value` REAL NOT NULL, `current_value` REAL NOT NULL, `unit` TEXT NOT NULL, `target_date` INTEGER NOT NULL, `start_date` INTEGER NOT NULL, `status` TEXT NOT NULL, `reminder_enabled` INTEGER NOT NULL, `reminder_frequency` TEXT, `created_at` INTEGER NOT NULL, `updated_at` INTEGER NOT NULL, FOREIGN KEY(`user_id`) REFERENCES `users`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "goalType",
            "columnName": "goal_type",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "targetValue",
            "columnName": "target_value",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "currentValue",
            "columnName": "current_value",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "unit",
            "columnName": "unit",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "targetDate",
            "columnName": "target_date",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "startDate",
            "columnName": "start_date",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "status",
            "columnName": "status",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "reminderEnabled",
            "columnName": "reminder_enabled",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "reminderFrequency",
            "columnName": "reminder_frequency",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "createdAt",
            "columnName": "created_at",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updated_at",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_goals_user_id",
            "unique": false,
            "columnNames": [
              "user_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_goals_user_id` ON `${TABLE_NAME}` (`user_id`)"
          },
          {
            "name": "index_goals_goal_type",
            "unique": false,
            "columnNames": [
              "goal_type"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_goals_goal_type` ON `${TABLE_NAME}` (`goal_type`)"
          },
          {
            "name": "index_goals_status",
            "unique": false,
            "columnNames": [
              "status"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_goals_status` ON `${TABLE_NAME}` (`status`)"
          },
          {
            "name": "index_goals_target_date",
            "unique": false,
            "columnNames": [
              "target_date"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_goals_target_date` ON `${TABLE_NAME}` (`target_date`)"
          },
          {
            "name": "index_goals_user_id_status",
            "unique": false,
            "columnNames": [
              "user_id",
              "status"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_goals_user_id_status` ON `${TABLE_NAME}` (`user_id`, `status`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "users",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "steps",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `user_id` INTEGER NOT NULL, `step_count` INTEGER NOT NULL, `step_goal` INTEGER NOT NULL, `date` INTEGER NOT NULL, `calories_burned` REAL NOT NULL, `distance_meters` REAL NOT NULL, `active_minutes` INTEGER NOT NULL, `created_at` INTEGER NOT NULL, `updated_at` INTEGER NOT NULL, FOREIGN KEY(`user_id`) REFERENCES `users`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "count",
            "columnName": "step_count",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "goal",
            "columnName": "step_goal",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "date",
            "columnName": "date",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "caloriesBurned",
            "columnName": "calories_burned",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "distanceMeters",
            "columnName": "distance_meters",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "activeMinutes",
            "columnName": "active_minutes",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "created_at",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updated_at",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_steps_user_id",
            "unique": false,
            "columnNames": [
              "user_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_steps_user_id` ON `${TABLE_NAME}` (`user_id`)"
          },
          {
            "name": "index_steps_date",
            "unique": false,
            "columnNames": [
              "date"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_steps_date` ON `${TABLE_NAME}` (`date`)"
          },
          {
            "name": "index_steps_user_id_date",
            "unique": true,
            "columnNames": [
              "user_id",
              "date"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_steps_user_id_date` ON `${TABLE_NAME}` (`user_id`, `date`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "users",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "food_entries",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `user_id` INTEGER NOT NULL, `food_name` TEXT NOT NULL, `brand_name` TEXT, `serving_size` REAL NOT NULL, `serving_unit` TEXT NOT NULL, `calories_per_serving` REAL NOT NULL, `protein_grams` REAL NOT NULL, `carbs_grams` REAL NOT NULL, `fat_grams` REAL NOT NULL, `fiber_grams` REAL NOT NULL, `sugar_grams` REAL NOT NULL, `sodium_mg` REAL NOT NULL, `meal_type` TEXT NOT NULL, `date_consumed` INTEGER NOT NULL, `notes` TEXT, `created_at` INTEGER NOT NULL, `logged_at` INTEGER NOT NULL, FOREIGN KEY(`user_id`) REFERENCES `users`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "foodName",
            "columnName": "food_name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "brandName",
            "columnName": "brand_name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "servingSize",
            "columnName": "serving_size",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "servingUnit",
            "columnName": "serving_unit",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "caloriesPerServing",
            "columnName": "calories_per_serving",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "proteinGrams",
            "columnName": "protein_grams",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "carbsGrams",
            "columnName": "carbs_grams",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "fatGrams",
            "columnName": "fat_grams",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "fiberGrams",
            "columnName": "fiber_grams",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "sugarGrams",
            "columnName": "sugar_grams",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "sodiumMg",
            "columnName": "sodium_mg",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "mealType",
            "columnName": "meal_type",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "dateConsumed",
            "columnName": "date_consumed",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "notes",
            "columnName": "notes",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "createdAt",
            "columnName": "created_at",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "loggedAt",
            "columnName": "logged_at",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_food_entries_user_id",
            "unique": false,
            "columnNames": [
              "user_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_food_entries_user_id` ON `${TABLE_NAME}` (`user_id`)"
          },
          {
            "name": "index_food_entries_meal_type",
            "unique": false,
            "columnNames": [
              "meal_type"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_food_entries_meal_type` ON `${TABLE_NAME}` (`meal_type`)"
          },
          {
            "name": "index_food_entries_date_consumed",
            "unique": false,
            "columnNames": [
              "date_consumed"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_food_entries_date_consumed` ON `${TABLE_NAME}` (`date_consumed`)"
          },
          {
            "name": "index_food_entries_food_name",
            "unique": false,
            "columnNames": [
              "food_name"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_food_entries_food_name` ON `${TABLE_NAME}` (`food_name`)"
          },
          {
            "name": "index_food_entries_user_id_date_consumed",
            "unique": false,
            "columnNames": [
              "user_id",
              "date_consumed"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_food_entries_user_id_date_consumed` ON `${TABLE_NAME}` (`user_id`, `date_consumed`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "users",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "nutrition_entries",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `user_id` INTEGER NOT NULL, `food_name` TEXT NOT NULL, `brand_name` TEXT, `serving_size` REAL NOT NULL, `serving_unit` TEXT NOT NULL, `calories_per_serving` REAL NOT NULL, `protein_grams` REAL NOT NULL, `carbs_grams` REAL NOT NULL, `fat_grams` REAL NOT NULL, `saturated_fat_grams` REAL NOT NULL, `trans_fat_grams` REAL NOT NULL, `cholesterol_mg` REAL NOT NULL, `fiber_grams` REAL NOT NULL, `sugar_grams` REAL NOT NULL, `added_sugars_grams` REAL NOT NULL, `sodium_mg` REAL NOT NULL, `potassium_mg` REAL NOT NULL, `vitamin_c_mg` REAL NOT NULL, `vitamin_d_mcg` REAL NOT NULL, `calcium_mg` REAL NOT NULL, `iron_mg` REAL NOT NULL, `meal_type` TEXT NOT NULL, `date_consumed` INTEGER NOT NULL, `notes` TEXT, `barcode` TEXT, `recipe_id` INTEGER, `is_homemade` INTEGER NOT NULL, `confidence_level` REAL NOT NULL, `created_at` INTEGER NOT NULL, `updated_at` INTEGER NOT NULL, `logged_at` INTEGER NOT NULL, FOREIGN KEY(`user_id`) REFERENCES `users`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "foodName",
            "columnName": "food_name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "brandName",
            "columnName": "brand_name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "servingSize",
            "columnName": "serving_size",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "servingUnit",
            "columnName": "serving_unit",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "caloriesPerServing",
            "columnName": "calories_per_serving",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "proteinGrams",
            "columnName": "protein_grams",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "carbsGrams",
            "columnName": "carbs_grams",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "fatGrams",
            "columnName": "fat_grams",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "saturatedFatGrams",
            "columnName": "saturated_fat_grams",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "transFatGrams",
            "columnName": "trans_fat_grams",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "cholesterolMg",
            "columnName": "cholesterol_mg",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "fiberGrams",
            "columnName": "fiber_grams",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "sugarGrams",
            "columnName": "sugar_grams",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "addedSugarsGrams",
            "columnName": "added_sugars_grams",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "sodiumMg",
            "columnName": "sodium_mg",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "potassiumMg",
            "columnName": "potassium_mg",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "vitaminCMg",
            "columnName": "vitamin_c_mg",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "vitaminDMcg",
            "columnName": "vitamin_d_mcg",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "calciumMg",
            "columnName": "calcium_mg",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "ironMg",
            "columnName": "iron_mg",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "mealType",
            "columnName": "meal_type",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "dateConsumed",
            "columnName": "date_consumed",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "notes",
            "columnName": "notes",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "barcode",
            "columnName": "barcode",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "recipeId",
            "columnName": "recipe_id",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "isHomemade",
            "columnName": "is_homemade",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "confidenceLevel",
            "columnName": "confidence_level",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "created_at",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updated_at",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "loggedAt",
            "columnName": "logged_at",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_nutrition_entries_user_id",
            "unique": false,
            "columnNames": [
              "user_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_nutrition_entries_user_id` ON `${TABLE_NAME}` (`user_id`)"
          },
          {
            "name": "index_nutrition_entries_meal_type",
            "unique": false,
            "columnNames": [
              "meal_type"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_nutrition_entries_meal_type` ON `${TABLE_NAME}` (`meal_type`)"
          },
          {
            "name": "index_nutrition_entries_date_consumed",
            "unique": false,
            "columnNames": [
              "date_consumed"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_nutrition_entries_date_consumed` ON `${TABLE_NAME}` (`date_consumed`)"
          },
          {
            "name": "index_nutrition_entries_food_name",
            "unique": false,
            "columnNames": [
              "food_name"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_nutrition_entries_food_name` ON `${TABLE_NAME}` (`food_name`)"
          },
          {
            "name": "index_nutrition_entries_user_id_date_consumed",
            "unique": false,
            "columnNames": [
              "user_id",
              "date_consumed"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_nutrition_entries_user_id_date_consumed` ON `${TABLE_NAME}` (`user_id`, `date_consumed`)"
          },
          {
            "name": "index_nutrition_entries_user_id_meal_type",
            "unique": false,
            "columnNames": [
              "user_id",
              "meal_type"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_nutrition_entries_user_id_meal_type` ON `${TABLE_NAME}` (`user_id`, `meal_type`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "users",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "notifications",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `user_id` INTEGER NOT NULL, `type` TEXT NOT NULL, `title` TEXT NOT NULL, `message` TEXT NOT NULL, `priority` TEXT NOT NULL, `status` TEXT NOT NULL, `scheduled_time` INTEGER NOT NULL, `sent_time` INTEGER, `read_time` INTEGER, `dismissed_time` INTEGER, `clicked_time` INTEGER, `is_read` INTEGER NOT NULL, `is_recurring` INTEGER NOT NULL, `recurrence_pattern` TEXT, `channel_id` TEXT NOT NULL, `notification_id` INTEGER, `action_data` TEXT, `related_entity_id` INTEGER, `related_entity_type` TEXT, `retry_count` INTEGER NOT NULL, `max_retries` INTEGER NOT NULL, `created_at` INTEGER NOT NULL, `updated_at` INTEGER NOT NULL, FOREIGN KEY(`user_id`) REFERENCES `users`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "message",
            "columnName": "message",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "priority",
            "columnName": "priority",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "status",
            "columnName": "status",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "scheduledTime",
            "columnName": "scheduled_time",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sentTime",
            "columnName": "sent_time",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "readTime",
            "columnName": "read_time",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "dismissedTime",
            "columnName": "dismissed_time",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "clickedTime",
            "columnName": "clicked_time",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "isRead",
            "columnName": "is_read",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isRecurring",
            "columnName": "is_recurring",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "recurrencePattern",
            "columnName": "recurrence_pattern",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "channelId",
            "columnName": "channel_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "notificationId",
            "columnName": "notification_id",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "actionData",
            "columnName": "action_data",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "relatedEntityId",
            "columnName": "related_entity_id",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "relatedEntityType",
            "columnName": "related_entity_type",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "retryCount",
            "columnName": "retry_count",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "maxRetries",
            "columnName": "max_retries",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "created_at",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updated_at",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_notifications_user_id",
            "unique": false,
            "columnNames": [
              "user_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_notifications_user_id` ON `${TABLE_NAME}` (`user_id`)"
          },
          {
            "name": "index_notifications_type",
            "unique": false,
            "columnNames": [
              "type"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_notifications_type` ON `${TABLE_NAME}` (`type`)"
          },
          {
            "name": "index_notifications_status",
            "unique": false,
            "columnNames": [
              "status"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_notifications_status` ON `${TABLE_NAME}` (`status`)"
          },
          {
            "name": "index_notifications_scheduled_time",
            "unique": false,
            "columnNames": [
              "scheduled_time"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_notifications_scheduled_time` ON `${TABLE_NAME}` (`scheduled_time`)"
          },
          {
            "name": "index_notifications_is_read",
            "unique": false,
            "columnNames": [
              "is_read"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_notifications_is_read` ON `${TABLE_NAME}` (`is_read`)"
          },
          {
            "name": "index_notifications_user_id_type",
            "unique": false,
            "columnNames": [
              "user_id",
              "type"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_notifications_user_id_type` ON `${TABLE_NAME}` (`user_id`, `type`)"
          },
          {
            "name": "index_notifications_user_id_status",
            "unique": false,
            "columnNames": [
              "user_id",
              "status"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_notifications_user_id_status` ON `${TABLE_NAME}` (`user_id`, `status`)"
          },
          {
            "name": "index_notifications_user_id_scheduled_time",
            "unique": false,
            "columnNames": [
              "user_id",
              "scheduled_time"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_notifications_user_id_scheduled_time` ON `${TABLE_NAME}` (`user_id`, `scheduled_time`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "users",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "notification_logs",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `user_id` INTEGER NOT NULL, `notification_id` INTEGER NOT NULL, `event_type` TEXT NOT NULL, `event_timestamp` INTEGER NOT NULL, `delivery_channel` TEXT NOT NULL, `is_success` INTEGER NOT NULL, `error_code` TEXT, `error_message` TEXT, `retry_count` INTEGER NOT NULL, `device_token` TEXT, `platform_response` TEXT, `user_agent` TEXT, `ip_address` TEXT, `app_version` TEXT, `os_version` TEXT, `processing_duration_ms` INTEGER NOT NULL, `delivery_duration_ms` INTEGER, `interaction_data` TEXT, `action_taken` TEXT, `session_id` TEXT, `batch_id` TEXT, `priority_level` INTEGER NOT NULL, `experiment_id` TEXT, `created_at` INTEGER NOT NULL, FOREIGN KEY(`user_id`) REFERENCES `users`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`notification_id`) REFERENCES `notifications`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "notificationId",
            "columnName": "notification_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "eventType",
            "columnName": "event_type",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "eventTimestamp",
            "columnName": "event_timestamp",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "deliveryChannel",
            "columnName": "delivery_channel",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "isSuccess",
            "columnName": "is_success",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "errorCode",
            "columnName": "error_code",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "errorMessage",
            "columnName": "error_message",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "retryCount",
            "columnName": "retry_count",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "deviceToken",
            "columnName": "device_token",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "platformResponse",
            "columnName": "platform_response",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "userAgent",
            "columnName": "user_agent",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "ipAddress",
            "columnName": "ip_address",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "appVersion",
            "columnName": "app_version",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "osVersion",
            "columnName": "os_version",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "processingDurationMs",
            "columnName": "processing_duration_ms",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "deliveryDurationMs",
            "columnName": "delivery_duration_ms",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "interactionData",
            "columnName": "interaction_data",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "actionTaken",
            "columnName": "action_taken",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "sessionId",
            "columnName": "session_id",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "batchId",
            "columnName": "batch_id",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "priorityLevel",
            "columnName": "priority_level",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "experimentId",
            "columnName": "experiment_id",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "createdAt",
            "columnName": "created_at",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_notification_logs_user_id",
            "unique": false,
            "columnNames": [
              "user_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_notification_logs_user_id` ON `${TABLE_NAME}` (`user_id`)"
          },
          {
            "name": "index_notification_logs_notification_id",
            "unique": false,
            "columnNames": [
              "notification_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_notification_logs_notification_id` ON `${TABLE_NAME}` (`notification_id`)"
          },
          {
            "name": "index_notification_logs_event_type",
            "unique": false,
            "columnNames": [
              "event_type"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_notification_logs_event_type` ON `${TABLE_NAME}` (`event_type`)"
          },
          {
            "name": "index_notification_logs_delivery_channel",
            "unique": false,
            "columnNames": [
              "delivery_channel"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_notification_logs_delivery_channel` ON `${TABLE_NAME}` (`delivery_channel`)"
          },
          {
            "name": "index_notification_logs_event_timestamp",
            "unique": false,
            "columnNames": [
              "event_timestamp"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_notification_logs_event_timestamp` ON `${TABLE_NAME}` (`event_timestamp`)"
          },
          {
            "name": "index_notification_logs_user_id_event_type",
            "unique": false,
            "columnNames": [
              "user_id",
              "event_type"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_notification_logs_user_id_event_type` ON `${TABLE_NAME}` (`user_id`, `event_type`)"
          },
          {
            "name": "index_notification_logs_notification_id_event_type",
            "unique": false,
            "columnNames": [
              "notification_id",
              "event_type"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_notification_logs_notification_id_event_type` ON `${TABLE_NAME}` (`notification_id`, `event_type`)"
          },
          {
            "name": "index_notification_logs_user_id_event_timestamp",
            "unique": false,
            "columnNames": [
              "user_id",
              "event_timestamp"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_notification_logs_user_id_event_timestamp` ON `${TABLE_NAME}` (`user_id`, `event_timestamp`)"
          },
          {
            "name": "index_notification_logs_delivery_channel_event_type",
            "unique": false,
            "columnNames": [
              "delivery_channel",
              "event_type"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_notification_logs_delivery_channel_event_type` ON `${TABLE_NAME}` (`delivery_channel`, `event_type`)"
          },
          {
            "name": "index_notification_logs_is_success_event_type",
            "unique": false,
            "columnNames": [
              "is_success",
              "event_type"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_notification_logs_is_success_event_type` ON `${TABLE_NAME}` (`is_success`, `event_type`)"
          },
          {
            "name": "index_notification_logs_priority_level_event_timestamp",
            "unique": false,
            "columnNames": [
              "priority_level",
              "event_timestamp"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_notification_logs_priority_level_event_timestamp` ON `${TABLE_NAME}` (`priority_level`, `event_timestamp`)"
          },
          {
            "name": "index_notification_logs_processing_duration_ms",
            "unique": false,
            "columnNames": [
              "processing_duration_ms"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_notification_logs_processing_duration_ms` ON `${TABLE_NAME}` (`processing_duration_ms`)"
          },
          {
            "name": "index_notification_logs_delivery_duration_ms",
            "unique": false,
            "columnNames": [
              "delivery_duration_ms"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_notification_logs_delivery_duration_ms` ON `${TABLE_NAME}` (`delivery_duration_ms`)"
          },
          {
            "name": "index_notification_logs_user_id_priority_level",
            "unique": false,
            "columnNames": [
              "user_id",
              "priority_level"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_notification_logs_user_id_priority_level` ON `${TABLE_NAME}` (`user_id`, `priority_level`)"
          },
          {
            "name": "index_notification_logs_created_at",
            "unique": false,
            "columnNames": [
              "created_at"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_notification_logs_created_at` ON `${TABLE_NAME}` (`created_at`)"
          },
          {
            "name": "index_notification_logs_retry_count",
            "unique": false,
            "columnNames": [
              "retry_count"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_notification_logs_retry_count` ON `${TABLE_NAME}` (`retry_count`)"
          },
          {
            "name": "index_notification_logs_experiment_id",
            "unique": false,
            "columnNames": [
              "experiment_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_notification_logs_experiment_id` ON `${TABLE_NAME}` (`experiment_id`)"
          },
          {
            "name": "index_notification_logs_batch_id",
            "unique": false,
            "columnNames": [
              "batch_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_notification_logs_batch_id` ON `${TABLE_NAME}` (`batch_id`)"
          },
          {
            "name": "index_notification_logs_user_id_delivery_channel_event_timestamp",
            "unique": false,
            "columnNames": [
              "user_id",
              "delivery_channel",
              "event_timestamp"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_notification_logs_user_id_delivery_channel_event_timestamp` ON `${TABLE_NAME}` (`user_id`, `delivery_channel`, `event_timestamp`)"
          },
          {
            "name": "index_notification_logs_event_type_is_success_event_timestamp",
            "unique": false,
            "columnNames": [
              "event_type",
              "is_success",
              "event_timestamp"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_notification_logs_event_type_is_success_event_timestamp` ON `${TABLE_NAME}` (`event_type`, `is_success`, `event_timestamp`)"
          },
          {
            "name": "index_notification_logs_priority_level_delivery_channel",
            "unique": false,
            "columnNames": [
              "priority_level",
              "delivery_channel"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_notification_logs_priority_level_delivery_channel` ON `${TABLE_NAME}` (`priority_level`, `delivery_channel`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "users",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "notifications",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "notification_id"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "exercises",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `name` TEXT NOT NULL, `description` TEXT, `muscleGroup` TEXT NOT NULL, `equipmentType` TEXT NOT NULL, `exerciseType` TEXT NOT NULL, `difficulty` TEXT NOT NULL, `instructions` TEXT, `safetyNotes` TEXT, `imageUrl` TEXT, `videoUrl` TEXT, `isCustom` INTEGER NOT NULL, `createdBy` INTEGER, `createdAt` INTEGER NOT NULL, `updatedAt` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "muscleGroup",
            "columnName": "muscleGroup",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "equipmentType",
            "columnName": "equipmentType",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "exerciseType",
            "columnName": "exerciseType",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "difficulty",
            "columnName": "difficulty",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "instructions",
            "columnName": "instructions",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "safetyNotes",
            "columnName": "safetyNotes",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "imageUrl",
            "columnName": "imageUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "videoUrl",
            "columnName": "videoUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isCustom",
            "columnName": "isCustom",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "createdBy",
            "columnName": "createdBy",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_exercises_name",
            "unique": true,
            "columnNames": [
              "name"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_exercises_name` ON `${TABLE_NAME}` (`name`)"
          },
          {
            "name": "index_exercises_muscleGroup",
            "unique": false,
            "columnNames": [
              "muscleGroup"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_exercises_muscleGroup` ON `${TABLE_NAME}` (`muscleGroup`)"
          },
          {
            "name": "index_exercises_equipmentType",
            "unique": false,
            "columnNames": [
              "equipmentType"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_exercises_equipmentType` ON `${TABLE_NAME}` (`equipmentType`)"
          },
          {
            "name": "index_exercises_exerciseType",
            "unique": false,
            "columnNames": [
              "exerciseType"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_exercises_exerciseType` ON `${TABLE_NAME}` (`exerciseType`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "workout_sets",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `workoutId` INTEGER NOT NULL, `exerciseId` INTEGER NOT NULL, `setNumber` INTEGER NOT NULL, `setType` TEXT NOT NULL, `repetitions` INTEGER NOT NULL, `targetReps` INTEGER, `weight` REAL NOT NULL, `duration` INTEGER NOT NULL, `distance` REAL NOT NULL, `restTime` INTEGER NOT NULL, `rpe` INTEGER, `notes` TEXT, `isPersonalRecord` INTEGER NOT NULL, `isCompleted` INTEGER NOT NULL, `completedAt` INTEGER, `createdAt` INTEGER NOT NULL, `updatedAt` INTEGER NOT NULL, FOREIGN KEY(`workoutId`) REFERENCES `workouts`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`exerciseId`) REFERENCES `exercises`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "workoutId",
            "columnName": "workoutId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "exerciseId",
            "columnName": "exerciseId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "setNumber",
            "columnName": "setNumber",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "setType",
            "columnName": "setType",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "repetitions",
            "columnName": "repetitions",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "targetReps",
            "columnName": "targetReps",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "weight",
            "columnName": "weight",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "duration",
            "columnName": "duration",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "distance",
            "columnName": "distance",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "restTime",
            "columnName": "restTime",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "rpe",
            "columnName": "rpe",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "notes",
            "columnName": "notes",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isPersonalRecord",
            "columnName": "isPersonalRecord",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isCompleted",
            "columnName": "isCompleted",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "completedAt",
            "columnName": "completedAt",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_workout_sets_workoutId",
            "unique": false,
            "columnNames": [
              "workoutId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_workout_sets_workoutId` ON `${TABLE_NAME}` (`workoutId`)"
          },
          {
            "name": "index_workout_sets_exerciseId",
            "unique": false,
            "columnNames": [
              "exerciseId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_workout_sets_exerciseId` ON `${TABLE_NAME}` (`exerciseId`)"
          },
          {
            "name": "index_workout_sets_workoutId_exerciseId",
            "unique": false,
            "columnNames": [
              "workoutId",
              "exerciseId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_workout_sets_workoutId_exerciseId` ON `${TABLE_NAME}` (`workoutId`, `exerciseId`)"
          },
          {
            "name": "index_workout_sets_workoutId_setNumber",
            "unique": false,
            "columnNames": [
              "workoutId",
              "setNumber"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_workout_sets_workoutId_setNumber` ON `${TABLE_NAME}` (`workoutId`, `setNumber`)"
          },
          {
            "name": "index_workout_sets_createdAt",
            "unique": false,
            "columnNames": [
              "createdAt"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_workout_sets_createdAt` ON `${TABLE_NAME}` (`createdAt`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "workouts",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "workoutId"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "exercises",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "exerciseId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      }
    ],
    "views": [],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, '128b2f61ccffd240159dfa9daf568319')"
    ]
  }
}